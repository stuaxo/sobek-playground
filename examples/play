#!/usr/bin/env python3

# This is a minimal, commentless example showing how to load an
# image. This is about as small an example as you can get with
# Sobek. Any library with the flexibility that Sobek provides will
# always have some setup involed, and I refuse to ever have any
# wrapper functions like:
#
#   w = super_window_function()
#   w.show_my_image()
#
# Those kinds of examples and wrapper routines are so far-removed from
# how software is actually used that they are entirely useless.

import math
import sys

sys.path.extend((".", ".."))

import sobek
import windowing
import sys

from sobek.glm import vec3, vec4, mat4, quat

WIDTH = 512
HEIGHT = 512


class PlayCallback(sobek.Callback):
    def __init__(self):
        sobek.Callback.__init__(self)

        self._mixer = None
        self._scale = None

    # This is called once to setup our start, end, and scale values.
    def init(self, node, state):
        self._mixer = sobek.tween.Mixer(
            quat(), quat(math.radians(359.99), vec3(0, 0, 1), 10.0)
        )
        self._scale = 1.0


    def call(self, node, state):
        pass
        #node.matrix = self._scale * \
        #    mat4.translate(self._mixer.update(state.time))



if __name__ == "__main__":
    if len(sys.argv) >= 2:
        image_file = sys.argv[-1]
    else:
        image_file = 'penguins.jpg'

    window = windowing.create_window(
        WIDTH,
        HEIGHT,
        fullscreen=False,
        title="Sobek Minimal Image Viewer"
    )

    assets = sobek.Assets((
        "assets",
        "assets/shaders",
        "../assets",
        "../assets/shaders"
    ))

    scene = sobek.Scene()
    transform = sobek.Transform()
    image = sobek.Image(assets.load(image_file).surface)

    transform.append(image)

    transform.matrix = mat4.translate(0.0, 0.0, -1.0)

    transform.callbacks.append(PlayCallback())

    scene.append(transform)

    scene.attributes.append(sobek.Blend())
    scene.attributes.append(assets.load("textured-cairo-quad.glsl"))

    scene.matrix = mat4.ortho(0.0, WIDTH, 0.0, HEIGHT, 0.0, 1.0)
    scene.viewport = vec4(0.0, 0.0, WIDTH, HEIGHT)
    scene.clear_color = vec4(0.4, 0.4, 0.4, 1.0)

    fps = window.main_loop(scene, sobek.RenderTraversal())

    print("FPS:", fps)
