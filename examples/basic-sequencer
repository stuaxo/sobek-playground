#!/usr/bin/env python3

import misc.common
import sobek

from sobek.glm import vec4, mat4

WIDTH = 512
HEIGHT = 512


class Update(sobek.Callback):
    TIMEOUT = 1.0 / 25.0
    FADE_TIME = 5.0

    def init(self, node, state):
        self.seq = []

        for i, s in enumerate(range(4)):
            seq = [0.0] * 8

            seq[i + 1] = 1.0

            # Force all quads to be on screen at once.
            seq[6] = 1.0

            self.seq.append(sobek.tween.Sequencer(seq, self.FADE_TIME))

    def call(self, node, state):
        for i in range(4):
            node[i].attributes[0].value[3] = self.seq[i].update(state.time)

        node.redraw = True


if __name__ == "__main__":
    window = sobek.window.create_window(
        WIDTH,
        HEIGHT,
        fullscreen=False,
        title="sobek-playground"
    )

    misc.common.assets.add_archive("../assets/color-quad.zip")

    scene = sobek.Scene()
    transform = sobek.Transform()

    for i, c in enumerate((
        (1.0, 0.0, 0.0, 1.0),
        (0.0, 1.0, 0.0, 1.0),
        (0.0, 0.0, 1.0, 1.0),
        (1.0, 1.0, 0.0, 1.0)
    )):
        quad = sobek.Quad(0, i * 128, 512, 128)

        quad.attributes.append(sobek.Uniform("color", sobek.glm.vec4(*c)))

        transform.append(quad)

    transform.callbacks.append(Update())
    transform.attributes.append(misc.common.assets.load("color-quad.glsl"))
    transform.attributes.append(sobek.Blend(
        sobek.Blend.SRC_ALPHA,
        sobek.Blend.ONE_MINUS_SRC_ALPHA
    ))

    transform.matrix = mat4.translate(0.0, 0.0, -1.0)

    scene.append(transform)

    scene.matrix = mat4.ortho(0.0, WIDTH, 0.0, HEIGHT, 0.0, 1.0)
    scene.viewport = vec4(0.0, 0.0, WIDTH, HEIGHT)
    scene.clear_color = vec4(0.4, 0.4, 0.4, 1.0)

    fps = window.main_loop(scene, sobek.RenderTraversal())

    print("FPS:", fps)
