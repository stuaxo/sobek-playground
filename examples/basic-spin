#!/usr/bin/env python3

import misc.common
import sobek
import sys
import math

from sobek.glm import vec3, vec4, mat4, quat

WIDTH = 512
HEIGHT = 512


# This callback will position any Image object in the center of the
# window and rotate it along the Z axis.
class Spin(sobek.Callback):
    def init(self, node, state):
        self.mixer = sobek.tween.Mixer(
            quat(math.radians(0.0), vec3(0.0, 0.0, 1.0)),
            quat(math.radians(359.0), vec3(0.0, 0.0, 1.0)),
            5.0,
            mixer=quat.mix
        )

    def call(self, node, state):
        t = mat4.translate(-node[0].width // 2, -node[0].height // 2, 0.0)
        r = self.mixer.update(state.time).to_mat4() * t

        node.matrix = mat4.translate(WIDTH // 2, HEIGHT // 2, 0) * r


if __name__ == "__main__":
    if len(sys.argv) >= 2:
        image_file = sys.argv[-1]

    else:
        image_file = "penguins.jpg"

    window = sobek.window.create_window(
        WIDTH,
        HEIGHT,
        fullscreen=False,
        title="sobek-playground"
    )

    scene = sobek.Scene()
    transform = sobek.Transform()
    image = sobek.Image(misc.common.assets.load(image_file).surface)

    transform.append(image)

    transform.matrix = mat4.translate(0.0, 0.0, -1.0)

    transform.callbacks.append(Spin())

    scene.append(transform)

    scene.attributes.append(sobek.Blend())
    scene.attributes.append(misc.common.assets.load(
        "textured-cairo-quad.glsl"
    ))

    scene.matrix = mat4.ortho(0.0, WIDTH, 0.0, HEIGHT, 0.0, 1.0)
    scene.viewport = vec4(0.0, 0.0, WIDTH, HEIGHT)
    scene.clear_color = vec4(0.4, 0.4, 0.4, 1.0)

    fps = window.main_loop(scene, sobek.RenderTraversal())

    print("FPS:", fps)
